% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_geo_decennial.R
\name{multi_geo_decennial}
\alias{multi_geo_decennial}
\title{Fetch a decennial census table with multiple geography levels}
\usage{
multi_geo_decennial(
  table,
  year = 2010,
  towns = NULL,
  regions = NULL,
  counties = "all",
  state = Sys.getenv("STATE_FIPS_CODE"),
  neighborhoods = NULL,
  tracts = NULL,
  name = name,
  geoid = geoid,
  weight = weight,
  sumfile = "sf1",
  verbose = TRUE,
  key = NULL
)
}
\arguments{
\item{table}{A string giving the decennial census table number. These are generally formatted as one or more letters, 3 numbers, and optionally a letter.}

\item{year}{The year of the census table; currently defaults 2010 (most recent decennial census).}

\item{towns}{A character vector of towns to include; \code{"all"} for all towns optionally filtered by county; or \code{NULL} (default) to not fetch town-level table.}

\item{regions}{A named list of regions with their town names (defaults \code{NULL}).}

\item{counties}{A character vector of counties to include; \code{"all"} (default) for all counties in the state; or \code{NULL} to not fetch county-level table.}

\item{state}{A string: either name or two-digit FIPS code of a US state. Required; defaults \code{Sys.getenv("STATE_FIPS_CODE")}. Set default to Connecticut with \code{Sys.setenv("STATE_FIPS_CODE" = "09")}.}

\item{neighborhoods}{A data frame with columns for neighborhood name, GEOID of tracts, and weight, e.g. share of each tract assigned to a neighborhood. If included, weighted sums will be returned for neighborhoods. Unlike \code{multi_geo_acs}, this doesn't take block groups.}

\item{tracts}{A character vector of 11-digit FIPS codes of tracts to include, or \code{"all"} for all tracts optionally filtered by county. Defaults \code{NULL}.}

\item{name}{Bare column name of neighborhood names. Only relevant if a neighborhood weight table is being used. Defaults \code{name} to match the neighborhood lookup datasets.}

\item{geoid}{Bare column name of neighborhood tract GEOIDs. Only relevant if a neighborhood weight table is being used. Defaults \code{geoid} to match the neighborhood lookup datasets.}

\item{weight}{Bare column name of weights between neighborhood names and tract/block groups. Only relevant if a neighborhood weight table is being used. Defaults \code{weight} to match the neighborhood lookup datasets.}

\item{sumfile}{A string giving the summary file to pull from. Defaults \code{"sf1"}; in some rare cases, \code{"sf3"} may be appropriate.}

\item{verbose}{Logical: whether to print summary of geographies included. Defaults \code{TRUE}.}

\item{key}{String: Census API key. If \code{NULL} (default), takes the value from \code{Sys.getenv("CENSUS_API_KEY")}.}
}
\value{
A tibble with GEOID, name, variable code, estimate, moe, geography level, state, and year, as applicable, for the chosen table.
}
\description{
Fetch a data table from the decennial census via \code{tidycensus} with your choice of geographies at multiple levels. For geographies made of aggregates, i.e. neighborhoods made of tracts or regions made of towns, the returned table will have estimates summed and margins of error calculated for the whole area.
}
\details{
This function essentially calls \code{tidycensus::get_decennial()} multiple times, depending on geographic levels chosen, and does minor cleaning, filtering, and aggregation. Note that the underlying \code{tidycensus::get_decennial()} requires a Census API key. As is the case with other \code{tidycensus} functions, \code{multi_geo_decennial} assumes this key is stored as \code{CENSUS_API_KEY} in your \code{.Renviron}. See \code{\link[tidycensus:census_api_key]{tidycensus::census_api_key()}} for installation.

Be advised that decennial table numbers may change from year to year, so if you're looking at trends, check FactFinder or another source to make sure the tables have the same meaning. Setting \code{verbose = TRUE} is helpful for this as well.
}
\examples{
\dontrun{
multi_geo_decennial("P001", 2010,
  towns = "all",
  regions = list(inner_ring = c("Hamden", "East Haven", "West Haven")),
  counties = "New Haven County")
}
}
\seealso{
\code{\link[tidycensus:census_api_key]{tidycensus::census_api_key()}}, \code{\link[tidycensus:get_decennial]{tidycensus::get_decennial()}}
}
